<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <properties resource="properties/db.properties"/>

    <!--settings-->
    <settings>
        <!--映射器启用或禁用 缓存-->
        <setting name="cacheEnabled" value="true"/>
        <!-- 全局启用或禁用延迟加载 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 当启用时, 有延迟加载属性的对象在被 调用时将会完全加载任意属性。否则, 每种属性将会按需要加载 -->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 允许或不允许多种结果集从一个单独 的语句中返回(需要适合的驱动)  -->
        <!--<setting name="multipleResultSetsEnabled" value="true"/>-->
        <!-- 使用列标签代替列名。 不同的驱动在这 方便表现不同 -->
        <!--<setting name="useColumnLabel" value="true"/>-->
        <!-- 允许 JDBC 支持生成的键。 需要适合的 驱动-->
        <!--<setting name="useGeneratedKeys" value="false"/>-->
        <!-- 指定 MyBatis 如何自动映射列到字段/属性 -->
        <!--<setting name="autoMappingBehavior" value="FULL"/>-->
        <!-- 配置默认的执行器 -->
        <!--
        <setting name="defaultExecutorType" value="BATCH"/>
        -->
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <!-- 设置超时时间, 它决定驱动等待一个数 据库响应的时间 -->
        <setting name="defaultStatementTimeout" value="25"/>
        <!-- 允不允许RowBounds在嵌套的执行器中 -->
        <setting name="safeRowBoundsEnabled" value="false"/>
        <!-- 允不允许数据库字段 A_COLUMN直接应设为javaBean属性aColumn -->
        <setting name="mapUnderscoreToCamelCase" value="false"/>
        <!-- 一级缓存 -->
        <setting name="localCacheScope" value="SESSION"/>
        <!-- 当参数为空时，指定jdbcType类型 -->
        <setting name="jdbcTypeForNull" value="OTHER"/>
        <!-- 指定触发延迟加载的对象的方法 -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>

        <setting name="logImpl" value="LOG4J"/>

    </settings>


    <!--PagesHelper-->
    <plugins>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <property name="dialect" value="mysql"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="true"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="true"/>
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="false"/>
            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <property name="params" value="pageNum=start;pageSize=limit;"/>
        </plugin>
    </plugins>




    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
  <!--  <mappers>
        <mapper resource="org/mybatis/example/BlogMapper.xml"/>
    </mappers>-->
</configuration>